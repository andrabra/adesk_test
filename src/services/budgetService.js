//budgetService.js
const budgetData = {
  income: {
    name: "Бюджет доходов",
    type: "group",
    children: [],
    totals: { /* Monthly totals */ }
  },
  expenses: {
    name: "Бюджет расходов",
    type: "group",
    children: [],
    totals: { /* Monthly totals */ }
  }
};

export default budgetData;




//   Представь, что ты мой ментор и помогаешь мне сделать тестовое задание на вакансию Junior Frontend разработчик. Будем делать приложение по учету бюджета. Основной компонент приложения представляет собой таблицу, в которой строки соответствуют статьям доходов или расходов, а столбцы — месяцам. Значения по определенной статье за определенный месяц можно редактировать кликом на ячейку — ячейка переключается в режим редактирования и в нее можно ввести новое значение. Необходимо добавить валидацию, ведь в ячейки можно добавлять только числа, а также необходимо добавить логику подсчета итоговой суммы после изменения значения в ячейке(каждая ячейка это input).

//   Строки «Бюджет доходов» и «Бюджет расходов» отражают суммы по соответствующим статьям, строка «Сальдо» — разницу между доходами и расходами, столбец «Итог» — суммы по всем месяцам. Это должен быть второй столбец. Также в ячейке с "Бюджетом доходов" и "Бюджетом расходов" должны быть кнопки добавления новой группы и статьи расходов, это 2 отдельные кнопки, который стилизованы так, чтобы помещаться в одной ячейке вместе с надписью.
//   Значения в них должны автоматически пересчитываться при редактировании бюджета.
  
//   Статьи могут объединяться в группы, группы могут быть вложены друг в друга на произвольную глубину. Группы можно сворачивать, тогда все дочерние строки этой группы скрываются(dropdown menu). В группах отображаются суммарные значения из дочерних строк, при редактировании они также должны автоматически пересчитываться.
  
//   Новые статьи или группы статей можно добавлять кликом по соответствующим кнопкам в существующих группах и в строках «Бюджет доходов» и «Бюджет расходов». При этом в соответствующей ячейке появляется поле для ввода названия статьи или группы. По нажатию Enter в таблицу добавляется новая строка с нулевыми значениями.
  
//   В таблице присутствует сортировка с возможностью переключения режимов:
//   по сумме — строки сортируются по убыванию значений в колонке «Итог», значения сравниваются без учета знака, при равенстве значений строки сортируются в -алфавитном порядке
//   -по названию — строки сортируются в алфавитном порядке
  
//   Архитектура проекта, которую я уже сделал выглядит вот так:
  // /budget-app
  // │
  // ├── /dist
  // │   ├── index.html
  // │   └── main.js
  // │
  // ├── /src
  // │   ├── /components
  // │   │   ├── /budgetTable
  // │   │   │   ├── budgetTable.js
  // │   │   │   └── budgetTable.css
  // │   │   └── /editableCell
  // │   │       ├── editableCell.js
  // │   │       └── editableCell.css
  // │   ├── /services
  // │   │   └── budgetService.js
  // │   ├── index.html
  // │   ├── index.js
  // │   └── style.css
  // │
  // ├── webpack.config.js
  // ├── package.json
  // └── README.md

